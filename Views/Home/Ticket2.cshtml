@model List<event_booking.Models.Ticket>
@{
    ViewData["Title"] = "Ticket2";
}

<h1>Order Successful!</h1>
<hr />
<h5>Receipt</h5>
<div class="row">
    <div onload="displayDate()" class="col">
        <p><span id="date"></span></p>
        <p>Order No: SL397826</p>
    </div>
    <div class="col">
        <strong><p>Billed To</p></strong>
        <p>@await Component.InvokeAsync("UserName")</p>
        <p>@User.Identity?.Name</p>
    </div>
</div>
<style>
table {
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}
</style>
<br />
<table>
  <tr>
    <th>Tickets</th>
    <th>Price</th>
    <th>Quantity</th>
    <th>Cost</th>
  </tr>
  <tr>
    <td>Adult</td>
    <td>$50.00</td>
    <td>1</td>
    <td>$50.00</td>
  </tr>
  <tr>
    <td>Total</td>
    <td></td>
    <td></td>
    <td>$50.00</td>
  </tr>

</table>
<br />
<h3>Download Tickets</h3>

<table>
  <tr>
    <th>No</th>
    <th>Ticket Type</th>
    <th>Name</th>
    <th>E-Ticket</th>
  </tr>
  <tr>
    <td>900137</td>
    <td>Adult</td>
    <td> @await Component.InvokeAsync("UserName")</td>
    <td>Download</td>
  </tr>


</table>
<script>
    function displayDate() {
        var currentDate = new Date();
        var dateString = currentDate.toDateString();
        document.getElementById("date").innerHTML = dateString;
    }
</script>
